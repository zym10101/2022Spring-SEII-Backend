<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nju.edu.erp.dao.SaleReturnsSheetDao">
    <insert id="save" parameterType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        insert into sale_returns_sheet (id, sale_sheet_id, operator, remark, total_amount, state, create_time)
        values (#{id}, #{saleSheetId}, #{operator}, #{remark}, #{totalAmount}, #{state}, #{createTime})
    </insert>
    <update id="updateState">
        update sale_returns_sheet
        set state = #{state}
        where id = #{saleReturnsSheetId}
    </update>
    <update id="updateStateV2">
        update sale_returns_sheet
        set state = #{state}
        where id = #{saleReturnsSheetId}
          and state = #{prevState}
    </update>

    <select id="getLatest" resultMap="SaleReturnsSheetPO">
        select *
        from sale_returns_sheet
        order by id desc
        limit 0,1;
    </select>
    <select id="findAll" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        select *
        from sale_returns_sheet;
    </select>
    <select id="findAllByState" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        select *
        from sale_returns_sheet
        where state = #{state}
    </select>
    <select id="findOneById" resultType="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        select *
        from sale_returns_sheet
        where id = #{saleReturnsSheetId}
    </select>
    <select id="findContentBySaleReturnsSheetId"
            resultType="com.nju.edu.erp.model.po.SaleReturnsSheetContentPO">
        select *
        from sale_returns_sheet_content
        where sale_returns_sheet_id = #{sale_returns_sheet_id}
    </select>
    <select id="findBatchId" resultType="java.lang.Integer">
        select wis.batch_id
        from sale_returns_sheet srs,
             warehouse_input_sheet wis
        where srs.sale_sheet_id = wis.id
          and srs.id = #{saleReturnsSheetId}
    </select>

    <select id="getMonthlyReturnSales" resultType="BigDecimal">
        select coalesce(SUM(sr.total_amount), 0)
        from sale_returns_sheet sr,
        sale_sheet s
        where sr.sale_sheet_id = s.id
        and sr.create_time between #{beginTime} and #{endTime}
        and salesman = #{salesmanName};
    </select>

    <insert id="saveBatch" useGeneratedKeys="true" keyProperty="id">
        insert into sale_returns_sheet_content (sale_returns_sheet_id, pid, quantity, unit_price, total_price,
        remark) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.saleReturnsSheetId},#{item.pid},#{item.quantity},#{item.unitPrice},#{item.totalPrice},#{item.remark})
        </foreach>
    </insert>

    <resultMap id="SaleReturnsSheetPO" type="com.nju.edu.erp.model.po.SaleReturnsSheetPO">
        <id column="id" property="id"></id>
        <result column="sale_sheet_id" property="saleSheetId"></result>
        <result column="operator" property="operator"></result>
        <result column="remark" property="remark"></result>
        <result column="total_amount" property="totalAmount"></result>
        <result column="state" property="state"></result>
        <result column="create_time" property="createTime"></result>
    </resultMap>

    <select id="getOutgoByTime" resultType="int">
        select coalesce(SUM(total_amount), 0)
        from sale_returns_sheet
        where create_time between #{beginTime} and #{endTime}
          and state = '审批完成';
    </select>

    <select id="getReturnCostByTime" resultType="int">
        select coalesce(SUM(p.purchase_price * sc.quantity), 0)
        from sale_returns_sheet s,
             sale_returns_sheet_content sc,
             product p
        where s.id = sc.sale_returns_sheet_id
          and sc.pid = p.id
          and s.create_time between #{beginTime} and #{endTime}
          and s.state = '审批完成'
    </select>
</mapper>

